#! /usr/bin/env python

PACKAGE='raw_perception_tests'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

#        Name                              Type         Description                        Default Min    Max
gen.add("downsampling_leaf_size",          double_t, 0, "Downsampling leaf size",          0.01,   0.001, 0.1  )
gen.add("normal_estimation_neighbors",     int_t,    0, "Neighbors for normal estimation", 50,     5,     100  )
gen.add("sac_distance_threshold",          double_t, 0, "SAC distance threshold",          0.01,   0.001, 0.1  )
gen.add("sac_max_iterations",              int_t,    0, "SAC max iterations",              2000,   1,     3000 )
gen.add("sac_normal_distance_weight",      double_t, 0, "SAC normal distance weight",      0.1,    0.01,  1    )
gen.add("sac_optimize_coefficiens",        bool_t,   0, "SAC optimize plane coefficiens",  True)
gen.add("sac_probability",                 double_t, 0, "SAC success probability",         0.99,   0.01,  1    )

#        Name                              Type         Description                        Default Min   Max 
gen.add("apply_plane_constraints",         bool_t,   0, "Apply plane constraints",         False)
gen.add("plane_normal_angular_threshold",  double_t, 0, "Plane normal angular threshold",  20,     0,    90    )
gen.add("plane_normal_x",                  double_t, 0, "Plane normal x",                  0.1,    -1.0, 1.0   )
gen.add("plane_normal_y",                  double_t, 0, "Plane normal y",                  0.1,    -1.0, 1.0   )
gen.add("plane_normal_z",                  double_t, 0, "Plane normal z",                  0.1,    -1.0, 1.0   )

exit(gen.generate(PACKAGE, "dominant_plane_extractor_test", "RansacDominantPlaneExtractorTest"))
